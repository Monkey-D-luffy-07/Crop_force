from flask import Flask, jsonify, request
import pandas as pd
import joblib
import onnxruntime as ort  # ONNX runtime for model loading
from sklearn.preprocessing import StandardScaler

app = Flask(__name__)

# Load pre-trained StandardScaler (this should be saved during model training)
scaler = joblib.load('path_to_saved_scaler.pkl')  # Make sure the scaler is saved and loaded here

# Load the ONNX model
onnx_model_path = 'path_to_model/model.onnx'  # Replace with the correct path to the ONNX model
ort_session = ort.InferenceSession(onnx_model_path)

@app.route("/predict", methods=['POST'])
def do_prediction():
    # Get JSON data from the request
    json_data = request.get_json()
    
    # Convert JSON data to pandas DataFrame
    df = pd.DataFrame(json_data, index=[0])
    
    # Scale the input data using the pre-fitted scaler
    x_scaled = scaler.transform(df)
    
    # Convert scaled data to numpy array and prepare it for ONNX model input
    inputs = {ort_session.get_inputs()[0].name: x_scaled.astype('float32')}
    
    # Make predictions using the ONNX model
    y_predict = ort_session.run(None, inputs)
    
    # Extract the predicted value (assuming it's a single prediction)
    predicted_value = y_predict[0][0]
    
    # Prepare the result in JSON format
    res = {"Predicted Disease": predicted_value}
    
    # Return the result as a JSON response
    return jsonify(res)

if __name__ == "__main__":
    app.run(host='0.0.0.0', port=5000)


pip freeze> requirements.txt
